[{"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/index.js":"1","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/ThemeWrapper/ThemeWrapper.js":"2","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"3","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/layouts/Admin/Admin.js":"4","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/layouts/RTL/RTL.js":"5","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/contexts/BackgroundColorContext.js":"6","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/contexts/ThemeContext.js":"7","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/routes.js":"8","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/FixedPlugin/FixedPlugin.js":"9","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Navbars/AdminNavbar.js":"10","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Sidebar/Sidebar.js":"11","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Navbars/RTLNavbar.js":"12","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Footer/Footer.js":"13","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Reto2.js":"14","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Contacto.js":"15","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Equipo.js":"16","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Reto3.js":"17","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Inicio.js":"18","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Reto1.js":"19","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Blog.js":"20","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/ExploraODS.js":"21"},{"size":1269,"mtime":1617916464352,"results":"22","hashOfConfig":"23"},{"size":695,"mtime":1616455327924,"results":"24","hashOfConfig":"23"},{"size":495,"mtime":1616455327913,"results":"25","hashOfConfig":"23"},{"size":4084,"mtime":1618264925337,"results":"26","hashOfConfig":"23"},{"size":4960,"mtime":1616455327930,"results":"27","hashOfConfig":"23"},{"size":254,"mtime":1616455327925,"results":"28","hashOfConfig":"23"},{"size":201,"mtime":1616455327925,"results":"29","hashOfConfig":"23"},{"size":3463,"mtime":1617907414024,"results":"30","hashOfConfig":"23"},{"size":3613,"mtime":1616455327915,"results":"31","hashOfConfig":"23"},{"size":8211,"mtime":1617256443347,"results":"32","hashOfConfig":"23"},{"size":4884,"mtime":1616461461589,"results":"33","hashOfConfig":"23"},{"size":6387,"mtime":1616455327919,"results":"34","hashOfConfig":"23"},{"size":1223,"mtime":1616455327917,"results":"35","hashOfConfig":"23"},{"size":11278,"mtime":1618005335057,"results":"36","hashOfConfig":"23"},{"size":5284,"mtime":1617256176548,"results":"37","hashOfConfig":"23"},{"size":4866,"mtime":1617256443347,"results":"38","hashOfConfig":"23"},{"size":19965,"mtime":1618265576409,"results":"39","hashOfConfig":"23"},{"size":9824,"mtime":1618264925340,"results":"40","hashOfConfig":"23"},{"size":4781,"mtime":1618005335055,"results":"41","hashOfConfig":"23"},{"size":5481,"mtime":1617907327219,"results":"42","hashOfConfig":"23"},{"size":16125,"mtime":1618264925339,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"17fw9r3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/index.js",[],["90","91"],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/ThemeWrapper/ThemeWrapper.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/layouts/Admin/Admin.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/layouts/RTL/RTL.js",[],["92","93"],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/contexts/BackgroundColorContext.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/contexts/ThemeContext.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/routes.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/FixedPlugin/FixedPlugin.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Navbars/AdminNavbar.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Sidebar/Sidebar.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Navbars/RTLNavbar.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/components/Footer/Footer.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Reto2.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Contacto.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Equipo.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Reto3.js",["94","95","96","97","98","99"],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Inicio.js",["100","101","102"],"import React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Inicio() {\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader className=\"mb-5\">\n                {/* <h5 className=\"card-category\">Black Table Heading</h5> */}\n                <CardTitle tag=\"h3\">\n                  Observatorio Ciudadano del destino presupuestal enfocado al cumplimiento de los Objetivos del Desarrollo Sostenible\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n              <p>\n                  Este sitio ha sido creado para proveer los datos recopilados y\n                  calculados por el equipo <b>DataOpossum</b> para el{\" \"}\n                  <a href=\"https://www.transparenciapresupuestaria.gob.mx/es/PTP/Convocatoria_rally_2021\" target=\"_blank\" rel=\"noreferrer\">\n                    Rally de Datos: Explorando Datos para el Desarrollo\n                    Sostenible\n                  </a>\n                </p>\n                <p>&nbsp;</p>\n                  <p>\n                    <span>\n                      Nuestra propuesta de política pública es establecer un{\" \"}\n                    </span>\n                    <span style={{ fontWeight: 700 }}>\n                      Observatorio Ciudadano del destino presupuestal enfocado\n                      al cumplimiento de los ODS\n                    </span>\n                    &nbsp;que permita dar seguimiento y asistir en la toma de\n                    decisiones.{\" \"}\n                  </p>\n                  <p>\n                    Para este fin proporcionamos datos curados y visualización\n                    de la relación entre los ODS y los PPs.{\" \"}\n                  </p>\n                  <p>Hasta el momento proporcionamos:</p>\n                  <ul>\n                    <li>\n                      Una base de datos con información curada del 2018 al 2021\n                      de:\n                    </li>\n                    <ul>\n                      <li>\n                        Vinculación de Programas Presupuestarios del PEF a los\n                        Objetivos de Desarrollo Sostenible\n                      </li>\n                      <li>Presupuesto de Egresos de la Federación</li>\n                    </ul>\n                  </ul>\n\n                  <ul>\n                    <li>\n                      Modelos de redes para cada año presupuestal (4) (formato\n                      JSON)\n                    </li>\n                    <ul>\n                      <li>\n                        Vinculación de Programas Presupuestarios del PEF a los\n                        Objetivos de Desarrollo Sostenible (Vinculación)\n                      </li>\n                      <li>\n                        Vinculación de Programas Presupuestarios del PEF a los\n                        Objetivos de Desarrollo Sostenible con presupuesto\n                        asignado (PEF)\n                      </li>\n                      <li>\n                        Programas Presupuestarios compartidos entre años con\n                        presupuesto asignado (Core)\n                      </li>\n                      <li>\n                        Programas Presupuestarios no incluidos en el Core\n                        (Accesorios)\n                      </li>\n                    </ul>\n                  </ul>\n\n                  <ul>\n                    <li>\n                      Cálculo de métricas locales y globales embebidos en las\n                      redes\n                    </li>\n                    <li>\n                      Un módulo de Python (en proceso de documentación) para\n                      limpieza de datos y replicar el análisis de las bases de\n                      datos así como el manejo de las redes proporcionadas\n                    </li>\n                    <li>\n                      Visualización de las redes en el sitio para observar la\n                      relación de PPs y ODS de interés\n                    </li>\n                  </ul>\n                  <hr />\n              <p>\n                  El rally se divide en 3 retos y podrás acceder a nuestros\n                  resultados correspondientes en el menú lateral del sitio o acceder\n                   directamente a lo correspondiente al reto 3 en los siguientes enlaces.\n                </p>\n                <ul>\n                <li><a href=\"/#/reto3\">Propuesta para el reto 3</a></li>\n                <li><a href=\"/#/explora\">Visualización de los modelos de redes</a></li>\n                <li><a href=\"/#/Blog\">Blog donde describimos el proceso que seguimos</a></li>\n                </ul>\n                <hr />\n                <h1>Publicaciones del reto 3</h1>\n                <div\n                  className=\"row\"\n                  style={{\n                    textAlign: \"center\",\n                    //display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <div className=\"col-sm-4\">\n                  <iframe \n                  src=\"https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Falientometal%2Fposts%2F10158722643700804&width=500&show_text=true&appId=1485452328231316&height=750\" \n                  width={500}\n                  height={750} \n                  style={{ border: \"none\", overflow: \"hidden\", backgroundColor: \"#fff\" }}\n                  scrolling=\"no\" \n                  frameBorder={0}\n                  allowFullScreen={true}\n                  allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"\n                  />\n\n                    <hr />\n                  </div>\n                  <div className=\"col-sm-4\">\n                  <iframe \n                  src=\"https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Falientometal%2Fposts%2F10158722642245804&width=500&show_text=true&appId=1485452328231316&height=750\" \n                  width={500}\n                  height={750}\n                  style={{ border: \"none\", overflow: \"hidden\", backgroundColor: \"#fff\" }}\n                  scrolling=\"no\" \n                  frameBorder={0}\n                  allowFullScreen={true}\n                  allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"\n                  />\n\n                    <hr />\n                  </div>\n                  <div className=\"col-sm-4\">\n                  <iframe src=\"https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Falientometal%2Fposts%2F10158722641775804&width=500&show_text=true&appId=1485452328231316&height=750\" \n                  width={500} \n                  height={750} \n                  style={{ border: \"none\", overflow: \"hidden\", backgroundColor: \"#fff\" }}\n                  scrolling=\"no\" \n                  frameBorder={0}\n                  allowFullScreen={true}\n                  allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"\n                  />\n\n                    <hr />\n                  </div>\n                </div>\n                \n                <hr />\n\n                <hr />\n                <h3>Convocatoria</h3>\n                <p>\n                  Con el objetivo de promover el uso de los datos abiertos,\n                  <a href=\"https://www.gob.mx/hacienda\" target=\"_blank\" rel=\"noreferrer\">\n                    {\" \"}\n                    La Secretaría de Hacienda y Crédito Público{\" \"}\n                  </a>\n                  con su portal de\n                  <a href=\"https://www.transparenciapresupuestaria.gob.mx/\" target=\"_blank\" rel=\"noreferrer\">\n                    {\" \"}\n                    Transparencia Presupuestaria{\" \"}\n                  </a>\n                  y el\n                  <a href=\"https://ciep.mx/\" target=\"_blank\" rel=\"noreferrer\">\n                    {\" \"}\n                    Centro de Investigación Económica y Presupuestaria, A.C.{\" \"}\n                  </a>\n                  , convocaron a la sexta edición del Rally de Datos: Explorando\n                  datos para el Desarrollo Sostenible, en el marco del{\" \"}\n                  <a href=\"https://opendataday.org/es_es/\" target=\"_blank\" rel=\"noreferrer\">\n                    Día de los Datos Abiertos\n                  </a>\n                </p>\n                <div\n                  className=\"row\"\n                  style={{\n                    textAlign: \"center\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <div className=\"col-sm-4\">\n                    <img\n                      alt=\"...\"\n                      className=\"squaredImg\"\n                      src={require(\"assets/img/logo-transparencia.png\").default}\n                    />\n                    <hr />\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <img\n                      alt=\"...\"\n                      className=\"squaredImg\"\n                      src={require(\"assets/img/logo-ods.png\").default}\n                    />\n                    <hr />\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <img\n                      alt=\"...\"\n                      className=\"squaredImg\"\n                      src={require(\"assets/img/logo-hacienda.png\").default}\n                    />\n                    <hr />\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Inicio;\n","/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Reto1.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/Blog.js",[],"/Users/mariodominguez/Documents/GitHub/RallyDataScienceGov/src/views/ExploraODS.js",["103","104","105","106","107","108"],"import React, { useEffect, useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nimport VINC2021 from \"../data/2021_PP_inVinc.json\";\nimport VINC2020 from \"../data/2020_PP_inVinc.json\";\nimport VINC2019 from \"../data/2019_PP_inVinc.json\";\nimport VINC2018 from \"../data/2018_PP_inVinc.json\";\n\nimport PEF2021 from \"../data/2021_PP_inPEF.json\";\nimport PEF2020 from \"../data/2020_PP_inPEF.json\";\nimport PEF2019 from \"../data/2019_PP_inPEF.json\";\nimport PEF2018 from \"../data/2018_PP_inPEF.json\";\n\nimport CORE2021 from \"../data/2021_Core_PP.json\";\nimport CORE2020 from \"../data/2020_Core_PP.json\";\nimport CORE2019 from \"../data/2019_Core_PP.json\";\nimport CORE2018 from \"../data/2018_Core_PP.json\";\n\nimport ACCESORY2021 from \"../data/2021_Accessory_PP.json\";\nimport ACCESORY2020 from \"../data/2020_Accessory_PP.json\";\nimport ACCESORY2019 from \"../data/2019_Accessory_PP.json\";\nimport ACCESORY2018 from \"../data/2018_Accessory_PP.json\";\n\nimport graphStyle from \"../data/ODS_style/ODS_style.json\";\n\n// import ODS_1 from '../data/ODS_images/1.jpg'\n// import Plot from \"react-plotly.js\";\nimport Cytoscape from \"cytoscape\";\nimport popper from 'cytoscape-popper';\n// import BubbleSets from 'cytoscape-bubblesets';\n// import COSEBilkent from \"cytoscape-cose-bilkent\";\n// import cola from \"cytoscape-cola\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport edgehandles from \"cytoscape-edgehandles\";\n\nimport { Button } from 'semantic-ui-react';\n\nCytoscape.use(popper);\n\nconst ReactButton = () => {\n  return <Button type=\"button\">React Button</Button>;\n};\n\nconst createContentFromComponent = (component) => {\n  const dummyDomEle = document.createElement('div');\n  ReactDOM.render(component, dummyDomEle);\n  document.body.appendChild(dummyDomEle);\n  return dummyDomEle;\n};\n\nCytoscape.use(edgehandles);\n\nfunction ExploraODS() {\n  const CACHE_VINC2018 = JSON.parse(JSON.stringify(VINC2018));\n  const CACHE_VINC2019 = JSON.parse(JSON.stringify(VINC2019));\n  const CACHE_VINC2020 = JSON.parse(JSON.stringify(VINC2020));\n  const CACHE_VINC2021 = JSON.parse(JSON.stringify(VINC2021));\n\n  const CACHE_PEF2021 = JSON.parse(JSON.stringify(PEF2021));\n  const CACHE_PEF2020 = JSON.parse(JSON.stringify(PEF2020));\n  const CACHE_PEF2019 = JSON.parse(JSON.stringify(PEF2019));\n  const CACHE_PEF2018 = JSON.parse(JSON.stringify(PEF2018));\n\n  const CACHE_CORE2021 = JSON.parse(JSON.stringify(CORE2021));\n  const CACHE_CORE2020 = JSON.parse(JSON.stringify(CORE2020));\n  const CACHE_CORE2019 = JSON.parse(JSON.stringify(CORE2019));\n  const CACHE_CORE2018 = JSON.parse(JSON.stringify(CORE2018));\n\n  const CACHE_ACCESORY2021 = JSON.parse(JSON.stringify(ACCESORY2021));\n  const CACHE_ACCESORY2020 = JSON.parse(JSON.stringify(ACCESORY2020));\n  const CACHE_ACCESORY2019 = JSON.parse(JSON.stringify(ACCESORY2019));\n  const CACHE_ACCESORY2018 = JSON.parse(JSON.stringify(ACCESORY2018));\n\n  const [loading, setLoading] = useState(true);\n  const [countPP, setPPCount] = useState(0);\n  const [selectedODS, setODSValue] = useState(0);\n  const [selectedYear, setYear] = useState(2021);\n  const [selectedType, setType] = useState(\"VINC\");\n  const [selectedLayout, setLayout] = useState(\"Red\");\n  const [selectedLayoutData, setLayoutData] = useState({\n    name: \"preset\",\n    avoidOverlap: true,\n    directed: true,\n    padding: 10,\n  });\n  const [selectedNetworkData, setNetworkData] = useState({\n    DATA: JSON.parse(JSON.stringify(CACHE_VINC2021)),\n  });\n  const [items] = useState([\n    { label: \"Todos\", value: 0 },\n    { label: \"ODS 1\", value: 1 },\n    { label: \"ODS 2\", value: 2 },\n    { label: \"ODS 3\", value: 3 },\n    { label: \"ODS 4\", value: 4 },\n    { label: \"ODS 5\", value: 5 },\n    { label: \"ODS 6\", value: 6 },\n    { label: \"ODS 7\", value: 7 },\n    { label: \"ODS 8\", value: 8 },\n    { label: \"ODS 9\", value: 9 },\n    { label: \"ODS 10\", value: 10 },\n    { label: \"ODS 11\", value: 11 },\n    { label: \"ODS 12\", value: 12 },\n    { label: \"ODS 13\", value: 13 },\n    { label: \"ODS 14\", value: 14 },\n    { label: \"ODS 15\", value: 15 },\n    { label: \"ODS 16\", value: 16 },\n    { label: \"ODS 17\", value: 17 },\n  ]);\n  const [yearsList] = useState([\n    {\n      label: \"2018\",\n      value: 2018,\n      CACHE_VINC: CACHE_VINC2018,\n      CACHE_PEF: CACHE_PEF2018,\n      CACHE_CORE: CACHE_CORE2018,\n      CACHE_ACCESORY: CACHE_ACCESORY2018,\n    },\n    {\n      label: \"2019\",\n      value: 2019,\n      CACHE_VINC: CACHE_VINC2019,\n      CACHE_PEF: CACHE_PEF2019,\n      CACHE_CORE: CACHE_CORE2019,\n      CACHE_ACCESORY: CACHE_ACCESORY2019,\n    },\n    {\n      label: \"2020\",\n      value: 2020,\n      CACHE_VINC: CACHE_VINC2020,\n      CACHE_PEF: CACHE_PEF2020,\n      CACHE_CORE: CACHE_CORE2020,\n      CACHE_ACCESORY: CACHE_ACCESORY2020,\n    },\n    {\n      label: \"2021\",\n      value: 2021,\n      CACHE_VINC: CACHE_VINC2021,\n      CACHE_PEF: CACHE_PEF2021,\n      CACHE_CORE: CACHE_CORE2021,\n      CACHE_ACCESORY: CACHE_ACCESORY2021,\n    },\n  ]);\n  const [typeList] = useState([\n    {\n      label: \"Vinculacion\",\n      value: \"VINC\",\n    },\n    {\n      label: \"PEF\",\n      value: \"PEF\",\n    },\n    {\n      label: \"Core_PP\",\n      value: \"CORE\",\n    },\n    {\n      label: \"Accessory_PP\",\n      value: \"ACCESORY\",\n    },\n  ]);\n  const [layoutList] = useState([\n    {\n      label: \"Red\",\n      value: \"Red\",\n      data: { name: \"preset\", avoidOverlap: true, directed: true, padding: 10 },\n    },\n    {\n      label: \"Grid\",\n      value: \"Grid\",\n      data: { name: \"grid\", avoidOverlap: true, directed: true, padding: 10 },\n    },\n    {\n      label: \"Random\",\n      value: \"Random\",\n      data: { name: \"random\", avoidOverlap: true, directed: true, padding: 10 },\n    },\n  ]);\n\n  useEffect(() => {\n    console.log(\"PP count\", countPP);\n  }, [countPP]);\n  \n  useEffect(() => {\n    console.log(\"network updated\", selectedNetworkData.DATA);\n  }, [selectedNetworkData]);\n\n  useEffect(() => {\n    filterODS();\n    console.log(\"selected ODS\", selectedODS);\n  }, [selectedODS]);\n\n  useEffect(() => {\n    console.log(\"selected type\", selectedType);\n    filterODS();\n  }, [selectedType]);\n\n  useEffect(() => {\n    console.log(\"selected year\", selectedYear);\n    filterODS();\n  }, [selectedYear]);\n\n  useEffect(() => {\n    console.log(\"selectedLayout\", selectedLayout);\n    setLoading(true)\n    setLayoutData(layoutList.find((x) => x.value === selectedLayout).data);\n    setLoading(false)\n  }, [selectedLayout]);\n\n  async function filterODS() {\n    setLoading(true)\n    let filteredNetwork = JSON.parse(JSON.stringify(CACHE_VINC2021)); // DEFAULT\n    switch (selectedType) {\n      case \"VINC\":\n        filteredNetwork = JSON.parse(\n          JSON.stringify(\n            yearsList.find((x) => x.value === selectedYear).CACHE_VINC\n          )\n        );\n        break;\n      case \"PEF\":\n        filteredNetwork = JSON.parse(\n          JSON.stringify(\n            yearsList.find((x) => x.value === selectedYear).CACHE_PEF\n          )\n        );\n        break;\n      case \"CORE\":\n        filteredNetwork = JSON.parse(\n          JSON.stringify(\n            yearsList.find((x) => x.value === selectedYear).CACHE_CORE\n          )\n        );\n        break;\n      case \"ACCESORY\":\n        filteredNetwork = JSON.parse(\n          JSON.stringify(\n            yearsList.find((x) => x.value === selectedYear).CACHE_ACCESORY\n          )\n        );\n        break;\n      default:\n        break;\n    }\n\n    if (selectedODS !== 0) {\n      let getNodeID = [...filteredNetwork.elements.nodes].find(\n        (x) => Number(x.data[\"name\"]) === selectedODS\n      );\n\n      let filteredEdges = [...filteredNetwork.elements.edges].filter(\n        (x) =>\n          x.data[\"target\"] === getNodeID.data[\"id\"] ||\n          x.data[\"id\"] === getNodeID.data[\"id\"]\n      );\n\n      let findNodes = new Array(0);\n      filteredEdges.forEach((x) => findNodes.push(x.data[\"source\"]));\n\n      let filteredNodes = [...filteredNetwork.elements.nodes].filter(\n        (x) =>\n          findNodes.includes(x.data[\"id\"]) ||\n          x.data[\"id\"] === getNodeID.data[\"id\"]\n      );\n\n      filteredNetwork.elements.nodes = filteredNodes;\n      filteredNetwork.elements.edges = filteredEdges;\n    }\n\n    const setData = { DATA: filteredNetwork };\n    setNetworkData(setData);\n    setPPCount(\n      selectedODS !== 0\n        ? filteredNetwork.elements.nodes.length - 1\n        : filteredNetwork.elements.nodes.length - 17\n    );\n    setLoading(false);\n  }\n\n  const cyRef = useRef(null);\n  const cyPopperRef = useRef(null);\n\n  useEffect(() => {\n    const cy = cyRef.current;\n\n    cy.nodes().on('mouseover', (event) => {\n\n      cyPopperRef.current = event.target.popper({\n        content: () => {\n\n          let div = document.createElement('div');\n          // adding id for easier JavaScript control\n          //div.id = tooltipId;\n\n          // adding class for easier CSS control\n          div.classList.add('target-popper');\n\n          let table = document.createElement('table');\n          div.append(table);\n          let targetData = event.target.data();\n          const propiedades = [\"EdgeCount\", \"Monto\", \"PP_por_Monto\", \"Redundancy\", \"LatapyClustering\", \"Aplicabilidad\"]\n          for (let prop in targetData) {\n            if (!targetData.hasOwnProperty(prop)) continue;\n  \n            let targetValue = targetData[prop];\n            // no recursive or reduce support\n            if (!propiedades.includes(prop)) continue;\n            if (typeof targetValue === \"object\") continue;\n  \n            let tr = table.insertRow();\n  \n            let tdTitle = tr.insertCell();\n            let tdValue = tr.insertCell();\n  \n            tdTitle.innerText = prop;\n            tdValue.innerText = targetValue;\n          }\n      \n          //div.innerHTML = \"<br><b>&nbsp;Name: \"+event.target.data(\"name\")+\"</b></br>\" + \n          //\"<br><b>&nbsp;Name: \"+event.target.data(\"name\")+\"</b></br>\";\n      \n          document.body.appendChild(div);\n      \n          return div;\n        },//createContentFromComponent(\"<b>\"+ele.id()+\"</b>\"), // (<ReactButton />),<Button type=\"button\">\"<b>\"+ele.id()+\"</b>\"</Button>\n        popper: {\n          placement: 'right',\n          removeOnDestroy: true,\n        },\n      });\n    });\n\n    cy.nodes().on('mouseout', () => {\n      if (cyPopperRef) {\n        cyPopperRef.current.destroy();\n      }\n    });\n  }, []);\n\n  //const elements = {\n  //  ...\n  //};\n\n  function cytosGraph(network) {\n\n\n\n\n    return (\n      <CytoscapeComponent\n        cy={(cy) => {\n          //this.cy = cy\n          cy.center();\n          cy.$(\"node\").on(\"grab\", function (e) {\n            var ele = e.target;\n            ele.connectedEdges().style({ \"line-color\": \"red\" });\n          });\n\n          cy.$(\"node\").on(\"select\", function (e) {\n            var ele = e.target;\n            ele.connectedEdges().style({ \"line-color\": \"#red\" });\n          });\n          cyRef.current = cy;\n        }}\n        elements={CytoscapeComponent.normalizeElements({\n          nodes: network.elements.nodes,\n          edges: network.elements.edges,\n        })}\n        stylesheet={graphStyle.style}\n        layout={selectedLayoutData}\n        style={{ width: \"100%\", height: \"1000px\" }}\n        X\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader className=\"mb-5\">\n                <h5 className=\"card-category\">\n                  Explora ODS y Programas Presupuestarios\n                </h5>\n                <CardTitle tag=\"h2\"></CardTitle>\n              </CardHeader>\n              <CardBody>\n              <h1>Observatorio de Programas Presupuestarios enfocados al cumplimiento de los ODS</h1>\n                <p>\n                  Este sitio ha sido creado para proveer los datos recopilados y\n                  calculados por el equipo <b>DataOpossum</b> para el{\" \"}\n                  <a href=\"https://www.transparenciapresupuestaria.gob.mx/es/PTP/Convocatoria_rally_2021\">\n                    Rally de Datos: Explorando Datos para el Desarrollo\n                    Sostenible\n                  </a>\n                </p>\n                <Row>\n                  <Col md=\"3\">\n                    <b style={{ color: \"#fff\" }}>Seleccionar Tipo: </b>\n                    <div className=\"select-dropdown\">\n                      <select\n                        value={selectedType}\n                        disabled={loading}\n                        onChange={(e) => setType(e.currentTarget.value)}\n                      >\n                        {typeList.map(({ label, value }) => (\n                          <option key={value} value={value}>\n                            {label}\n                          </option>\n                        ))}\n                      </select>{\" \"}\n                    </div>\n                  </Col>\n                  <Col md=\"3\">\n                    <b style={{ color: \"#fff\" }}> Seleccionar Año: </b>\n                    <div className=\"select-dropdown\">\n                      <select\n                        value={selectedYear}\n                        disabled={loading}\n                        onChange={(e) => setYear(Number(e.currentTarget.value))}\n                      >\n                        {yearsList.map(({ label, value }) => (\n                          <option key={value} value={value}>\n                            {label}\n                          </option>\n                        ))}\n                      </select>{\" \"}\n                    </div>\n                  </Col>\n                  <Col md=\"3\">\n                    <b style={{ color: \"#fff\" }}> Seleccionar ODS: </b>\n                    <div className=\"select-dropdown\">\n                      <select\n                        disabled={loading}\n                        onChange={(e) =>\n                          setODSValue(Number(e.currentTarget.value))\n                        }\n                      >\n                        {items.map(({ label, value }) => (\n                          <option key={value} value={value}>\n                            {label}\n                          </option>\n                        ))}\n                      </select>{\" \"}\n                    </div>\n                  </Col>\n                  <Col md=\"3\">\n                    <b style={{ color: \"#fff\" }}> Seleccionar Layout: </b>\n                    <div className=\"select-dropdown\">\n                      <select\n                        value={selectedLayout}\n                        disabled={loading}\n                        onChange={(e) => setLayout(e.currentTarget.value)}\n                      >\n                        {layoutList.map(({ label, value }) => (\n                          <option key={value} value={value}>\n                            {label}\n                          </option>\n                        ))}\n                      </select>{\" \"}\n                    </div>\n                  </Col>\n                </Row>\n                <hr />\n                <Row>\n                  <Col md=\"12\">\n                    <b style={{ color: \"#fff\" }}>\n                      {\" \"}\n                      Cantidad de Programas Presupuestarios:{\" \"}\n                    </b>\n                    <b style={{ color: \"#fff\" }}>{countPP}</b>\n                  </Col>\n                </Row>\n                <div\n                  style={{\n                    backgroundColor: \"#fff\",\n                    marginTop: 10,\n                    borderRadius: 30,\n                  }}\n                >\n                  {selectedNetworkData.DATA != null\n                    ? cytosGraph(selectedNetworkData.DATA)\n                    : null}\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default ExploraODS;\n\n/* <div style={{ backgroundColor: \"#fff\", margin: 40 }}>\n<Plot\n  style={{ width: \"100%\" }}\n  data={[\n    {\n      x: [1, 2, 3],\n      y: [2, 6, 3],\n      type: \"scatter\",\n      mode: \"lines+markers\",\n      marker: { color: \"red\" },\n    },\n    { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n  ]}\n  layout={{\n    title: \"A Fancy Plot\",\n  }}\n/>\n</div>  */\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"111","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":2,"column":19,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"115","severity":1,"message":"119","line":2,"column":25,"nodeType":"117","messageId":"118","endLine":2,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":232,"column":23,"nodeType":"122","endLine":235,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":249,"column":23,"nodeType":"122","endLine":252,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":259,"column":23,"nodeType":"122","endLine":262,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":389,"column":19,"nodeType":"122","endLine":389,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":123,"column":19,"nodeType":"122","endLine":132,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":137,"column":19,"nodeType":"122","endLine":146,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":151,"column":19,"nodeType":"122","endLine":159,"endColumn":21},{"ruleId":"115","severity":1,"message":"127","line":41,"column":7,"nodeType":"117","messageId":"118","endLine":41,"endColumn":18},{"ruleId":"115","severity":1,"message":"128","line":45,"column":7,"nodeType":"117","messageId":"118","endLine":45,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":191,"column":6,"nodeType":"131","endLine":191,"endColumn":19,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"130","line":196,"column":6,"nodeType":"131","endLine":196,"endColumn":20,"suggestions":"133"},{"ruleId":"129","severity":1,"message":"130","line":201,"column":6,"nodeType":"131","endLine":201,"endColumn":20,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":208,"column":6,"nodeType":"131","endLine":208,"endColumn":22,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ReactButton' is assigned a value but never used.","'createContentFromComponent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterODS'. Either include it or remove the dependency array.","ArrayExpression",["139"],["140"],["141"],"React Hook useEffect has a missing dependency: 'layoutList'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [filterODS, selectedODS]",{"range":"151","text":"152"},"Update the dependencies array to be: [filterODS, selectedType]",{"range":"153","text":"154"},"Update the dependencies array to be: [filterODS, selectedYear]",{"range":"155","text":"156"},"Update the dependencies array to be: [layoutList, selectedLayout]",{"range":"157","text":"158"},[5995,6008],"[filterODS, selectedODS]",[6102,6116],"[filterODS, selectedType]",[6210,6224],"[filterODS, selectedYear]",[6423,6439],"[layoutList, selectedLayout]"]